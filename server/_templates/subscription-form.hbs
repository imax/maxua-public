<div class="subscription-form-panel">
  <h3>{{#if title}}{{title}}{{else}}New posts in your inbox ✨{{/if}}</h3>
  
  <form x-data="{
    email: '',
    message: '',
    messageType: '',
    submitting: false,
    tagline: '',
    
    init() {
      // Array of possible taglines
      const taglines = [
        'Thoughts on startups, tech, and coffee ☕',
        'З мене контент, з вас підписка ;-)',
        'ОДИН день ОДИН імейл. Easy!',
        'Більше ніж 13 класних людей вже підписались. Чого ти чекаєш? :)',
        'Чьотка розсилка для тих, хто чьотка читає',
        'Better than sex! – no one said ever. Still worth a try though',
        '^^ Less lurking, more subscribing ^^',
        'Free eBook included! (eventually, if you read long enough)',
        'Цей текст занадто тупий, щоб бути створеним ChatGPT',
      ];
      
      // Pick a random tagline
      this.tagline = taglines[Math.floor(Math.random() * taglines.length)];
    },
    
    async submitForm() {
      if (!this.email || !this.isValidEmail(this.email)) {
        this.message = 'Please enter a valid email address';
        this.messageType = 'error';
        return;
      }
      
      this.submitting = true;
      
      try {
        const response = await fetch('/api/subscribe', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ 
            email: this.email
          })
        });
        
        const result = await response.json();
        
        if (response.ok) {
          this.message = result.message;
          this.messageType = 'success';
          this.email = '';
        } else {
          throw new Error(result.error || 'Failed to subscribe');
        }
      } catch (error) {
        this.message = `Error: ${error.message}`;
        this.messageType = 'error';
      } finally {
        this.submitting = false;
      }
    },
    
    isValidEmail(email) {
      const regex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
      return regex.test(email);
    }
  }" @submit.prevent="submitForm">
    <div class="form-group">
      <input 
        type="email" 
        x-model="email" 
        placeholder="Your email address" 
        required
        class="email-input">
      <button 
        type="submit" 
        :disabled="submitting"
        class="subscribe-button">
        <span x-text="submitting ? 'Subscribing...' : 'Subscribe'"></span>
      </button>
    </div>
    
    <div class="subscription-info" x-text="tagline"></div>
    
    <div 
      x-show="message" 
      x-text="message" 
      :class="`subscription-message ${messageType}`">
    </div>
  </form>
</div>
